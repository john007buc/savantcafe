<?php

namespace John\ArticleBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{

    public function countArticles($published=1,$active=1,$category=null)
    {
        $qb = $this->createQueryBuilder('a')
            ->select('count(a)');

        if($category_id){
            $qb->join('a.categories','c')
                ->where('c.slug=:category')
                ->setParameter('category',$category);
        }

        $qb->andWhere('a.published=:published')
        ->setParameter('published',$published)
        ->andWhere('a.active=:active')
        ->setParameter('active',$active);

        return $qb->getQuery()->getSingleScalarResult();
    }

    public function getArticles($published=1,$active=1,$category=null,$offset=null,$max=null)
    {
        $qb = $this->createQueryBuilder('a')
            ->select('a')
            ->where('a.published=:published')
            ->setParameter('published',$published)
            ->andWhere('a.active=:active')
            ->setParameter('active',$active);

        if($category){
            $qb->join('a.categories','c')
                ->andWhere('c.slug=:category')
                ->setParameter('category',$category);
        }

        if($offset){
            $qb->setFirstResult($offset);
        }

        if($max){
            $qb->setMaxResults($max);
        }

        return $qb->getQuery()->getResult();
    }
}
